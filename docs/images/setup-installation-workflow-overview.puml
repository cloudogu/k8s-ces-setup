
@startuml
!define CLOUDOGUURL https://raw.githubusercontent.com/cloudogu/plantuml-cloudogu-sprites/master

!includeurl CLOUDOGUURL/common.puml
!includeurl CLOUDOGUURL/dogus/cloudogu.puml
!includeurl CLOUDOGUURL/tools/docker.puml
!includeurl CLOUDOGUURL/tools/virtualbox.puml
!includeurl CLOUDOGUURL/dogus/nginx.puml
!includeurl CLOUDOGUURL/tools/k8s.puml
!define SECONDARY_COLOR #55EE55
!define POD_COLOR #abcdef

rectangle external as "External Services" {
    database registry as "Image Registry" #white
    file doguratoryaml as "Dogu Operator Resource" #white
}

rectangle "Cluster" as cluster <<$k8s>> {

    rectangle setupres as "Setup Resources" {
        rectangle ic as "Instance Credentials (Image/Dogu.json) (Secret)" <<$k8s>> SECONDARY_COLOR
        rectangle podSA as "service account" SECONDARY_COLOR
        rectangle setupconfig as "Setup Configuration" #white
        note top of setupconfig #lightyellow
            - Component URLs
            - Log level
            - Target namespace
        end note

        note top of podSA #lightyellow
            The setup might use RBAC permissions
            from different locations (f. i. from
            the setup itself or from the development
            machine)
        end note
    }

    rectangle cp1 as "control-plane" <<$k8s>> #white

    rectangle setuppod as "Pod" POD_COLOR {
        rectangle setup as "k8s-ces-setup" <<$cloudogu>> #white {
            rectangle setupui as "Setup UI"
            rectangle setupapi as "Setup API"
            rectangle setupbackend {
                file kubeConfig SECONDARY_COLOR
                rectangle applier as "k8sApplyClient"
            }
        }
    }

    rectangle targetns as "Target Namespace" {
rectangle icCopied as "Instance Credentials (Image/Dogu.json) (Secret)" <<$k8s>> SECONDARY_COLOR

        rectangle pod as "Pod" POD_COLOR {
            rectangle dogurator as "Dogu Operator" <<$cloudogu>> #white
        }
    }

}
setup --u-> setupconfig : 1. read config
ic <-d- setupbackend : 2a. read secret by name
setupbackend ---> icCopied : 3. provide namespace with instance credentials

setupui -r-> setupapi : provide data for the next setup run
setupapi ---d-> setupbackend : call backend with setup data
setupbackend --> setupbackend : 2b. use secret from ui
dogurator -> icCopied : use credentials

applier -l-> kubeConfig : uses
applier <== doguratoryaml : 4. read resource
applier ==> cp1 : 5. generically apply resource(s)
doguratoryaml -.> registry : reference image
cp1 --> dogurator : instantiate container
cp1 -.->  dogurator

podSA -> kubeConfig  :  auto pod mounted

'styling
setupres ---[hidden]-> setuppod
'registry -[hidden]d-> doguratoryaml
'external -[hidden]l-> cluster
'doguratoryaml -[hidden]-> applier

legend bottom right
not shown: Installation of setup
end legend

caption Example workflow of how k8s-ces-setup installs Cloudogu K8s components
@enduml