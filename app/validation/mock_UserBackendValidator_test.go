// Code generated by mockery v2.42.1. DO NOT EDIT.

package validation

import (
	context "github.com/cloudogu/k8s-ces-setup/app/context"
	mock "github.com/stretchr/testify/mock"
)

// MockUserBackendValidator is an autogenerated mock type for the UserBackendValidator type
type MockUserBackendValidator struct {
	mock.Mock
}

type MockUserBackendValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUserBackendValidator) EXPECT() *MockUserBackendValidator_Expecter {
	return &MockUserBackendValidator_Expecter{mock: &_m.Mock}
}

// ValidateUserBackend provides a mock function with given fields: backend
func (_m *MockUserBackendValidator) ValidateUserBackend(backend context.UserBackend) error {
	ret := _m.Called(backend)

	if len(ret) == 0 {
		panic("no return value specified for ValidateUserBackend")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.UserBackend) error); ok {
		r0 = rf(backend)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockUserBackendValidator_ValidateUserBackend_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateUserBackend'
type MockUserBackendValidator_ValidateUserBackend_Call struct {
	*mock.Call
}

// ValidateUserBackend is a helper method to define mock.On call
//   - backend context.UserBackend
func (_e *MockUserBackendValidator_Expecter) ValidateUserBackend(backend interface{}) *MockUserBackendValidator_ValidateUserBackend_Call {
	return &MockUserBackendValidator_ValidateUserBackend_Call{Call: _e.mock.On("ValidateUserBackend", backend)}
}

func (_c *MockUserBackendValidator_ValidateUserBackend_Call) Run(run func(backend context.UserBackend)) *MockUserBackendValidator_ValidateUserBackend_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.UserBackend))
	})
	return _c
}

func (_c *MockUserBackendValidator_ValidateUserBackend_Call) Return(_a0 error) *MockUserBackendValidator_ValidateUserBackend_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockUserBackendValidator_ValidateUserBackend_Call) RunAndReturn(run func(context.UserBackend) error) *MockUserBackendValidator_ValidateUserBackend_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUserBackendValidator creates a new instance of MockUserBackendValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUserBackendValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUserBackendValidator {
	mock := &MockUserBackendValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
