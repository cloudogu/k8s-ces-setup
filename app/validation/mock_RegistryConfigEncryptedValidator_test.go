// Code generated by mockery v2.53.3. DO NOT EDIT.

package validation

import (
	context "github.com/cloudogu/k8s-ces-setup/v4/app/context"
	mock "github.com/stretchr/testify/mock"
)

// MockRegistryConfigEncryptedValidator is an autogenerated mock type for the RegistryConfigEncryptedValidator type
type MockRegistryConfigEncryptedValidator struct {
	mock.Mock
}

type MockRegistryConfigEncryptedValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRegistryConfigEncryptedValidator) EXPECT() *MockRegistryConfigEncryptedValidator_Expecter {
	return &MockRegistryConfigEncryptedValidator_Expecter{mock: &_m.Mock}
}

// ValidateRegistryConfigEncrypted provides a mock function with given fields: config
func (_m *MockRegistryConfigEncryptedValidator) ValidateRegistryConfigEncrypted(config *context.SetupJsonConfiguration) error {
	ret := _m.Called(config)

	if len(ret) == 0 {
		panic("no return value specified for ValidateRegistryConfigEncrypted")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*context.SetupJsonConfiguration) error); ok {
		r0 = rf(config)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateRegistryConfigEncrypted'
type MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call struct {
	*mock.Call
}

// ValidateRegistryConfigEncrypted is a helper method to define mock.On call
//   - config *context.SetupJsonConfiguration
func (_e *MockRegistryConfigEncryptedValidator_Expecter) ValidateRegistryConfigEncrypted(config interface{}) *MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call {
	return &MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call{Call: _e.mock.On("ValidateRegistryConfigEncrypted", config)}
}

func (_c *MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call) Run(run func(config *context.SetupJsonConfiguration)) *MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*context.SetupJsonConfiguration))
	})
	return _c
}

func (_c *MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call) Return(_a0 error) *MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call) RunAndReturn(run func(*context.SetupJsonConfiguration) error) *MockRegistryConfigEncryptedValidator_ValidateRegistryConfigEncrypted_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRegistryConfigEncryptedValidator creates a new instance of MockRegistryConfigEncryptedValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRegistryConfigEncryptedValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRegistryConfigEncryptedValidator {
	mock := &MockRegistryConfigEncryptedValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
