// Code generated by mockery v2.20.0. DO NOT EDIT.

package validation

import (
	context "github.com/cloudogu/k8s-ces-setup/app/context"
	mock "github.com/stretchr/testify/mock"
)

// MockDoguValidator is an autogenerated mock type for the DoguValidator type
type MockDoguValidator struct {
	mock.Mock
}

type MockDoguValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDoguValidator) EXPECT() *MockDoguValidator_Expecter {
	return &MockDoguValidator_Expecter{mock: &_m.Mock}
}

// ValidateDogus provides a mock function with given fields: dogus
func (_m *MockDoguValidator) ValidateDogus(dogus context.Dogus) error {
	ret := _m.Called(dogus)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Dogus) error); ok {
		r0 = rf(dogus)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockDoguValidator_ValidateDogus_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateDogus'
type MockDoguValidator_ValidateDogus_Call struct {
	*mock.Call
}

// ValidateDogus is a helper method to define mock.On call
//  - dogus context.Dogus
func (_e *MockDoguValidator_Expecter) ValidateDogus(dogus interface{}) *MockDoguValidator_ValidateDogus_Call {
	return &MockDoguValidator_ValidateDogus_Call{Call: _e.mock.On("ValidateDogus", dogus)}
}

func (_c *MockDoguValidator_ValidateDogus_Call) Run(run func(dogus context.Dogus)) *MockDoguValidator_ValidateDogus_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Dogus))
	})
	return _c
}

func (_c *MockDoguValidator_ValidateDogus_Call) Return(_a0 error) *MockDoguValidator_ValidateDogus_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDoguValidator_ValidateDogus_Call) RunAndReturn(run func(context.Dogus) error) *MockDoguValidator_ValidateDogus_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockDoguValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDoguValidator creates a new instance of MockDoguValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDoguValidator(t mockConstructorTestingTNewMockDoguValidator) *MockDoguValidator {
	mock := &MockDoguValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
