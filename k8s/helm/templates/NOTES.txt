{{ include "printCloudoguLogo" . }}

Thank you for installing the Cloudogu EcoSystem.

If all sections from the setup.json are completed the setup starts unattended.

To start the setup manually:
    kubectl port-forward pod/$(kubectl get pods -l app.kubernetes.io/name=k8s-ces-setup -o jsonpath='{.items[0].metadata.name}') 30080:8080
    curl -I --request POST --url http://localhost:30080/api/v1/setup
{{- printf "\n" }}
{{- $statusConfigName := "k8s-setup-config"}}
If the setup throws errors because e.g. invalid credentials you have to delete the configmap {{ $statusConfigName }} before you can restart the setup again:
    kubectl delete configmap {{ $statusConfigName }} --namespace={{ .Release.Namespace }}

To install more Dogus after the setup is done:

Create a File dogu.yaml for the Dogu-CR:
    apiVersion: k8s.cloudogu.com/v1
    kind: Dogu
    metadata:
      name: jenkins
      labels:
        app: ces
    spec:
      name: official/jenkins
      version: 2.387.1-2

and apply it to the cluster: kubectl apply -f dogu.yaml --namespace={{ .Release.Namespace }}
{{- printf "\n" }}
{{- $doguSecretName := "k8s-dogu-operator-dogu-registry" }}
{{- if not (and .Values.dogu_registry_secret.username .Values.dogu_registry_secret.password) }}
Warning: No mandatory credentials for secret {{ $doguSecretName }} specified . You must create it before the setup can start.
    Use the corresponding fields in the values.yaml and upgrade the chart.
    Ignore this warning if you created it manually with:
        kubectl create secret generic {{ $doguSecretName }} --namespace={{ .Release.Namespace }} --from-literal=username=yourusername --from-literal=password=yourpassword --from-literal=endpoint={{ .Values.dogu_registry_secret.url }}
{{ end }}

{{- $dockerSecretName := "ces-container-registries" }}
{{- if not .Values.container_registry_secrets }}
Warning: No mandatory credentials for secret {{ $dockerSecretName }} specified. You must create it before the setup can start.
    Use the corresponding fields in the values.yaml and upgrade the chart.
    Ignore this warning if you create it manually with:
        kubectl create secret docker-registry {{ $dockerSecretName }} --namespace={{ .Release.Namespace }} --docker-username=yourusername --docker-password=yourpassword --docker-server=registry.cloudogu.com --docker-email=youremail
{{ end }}

{{- $helmSecretName := "component-operator-helm-registry" }}
{{- if not (and .Values.helm_registry_secret.username .Values.helm_registry_secret.password) }}
Warning: No mandatory credentials for secret {{ $helmSecretName }} specified. You must create it before the setup can start.
    Use the corresponding fields in the values.yaml and upgrade the chart.
    Ignore this warning if you create it manually with:
        kubectl create secret generic {{ $helmSecretName }} --namespace={{ .Release.Namespace }} --from-literal=config.json="{\"auths\": {\"{{ .Values.helm_registry_secret.host }}": {\"auth\": \"$(printf "%s:%s" "yourusername" "yourpassword" | base64)\"}}}"
{{ end }}

{{- $setupJsonName := "k8s-ces-setup-json" }}
{{- if not .Values.setup_json }}
Warning:
    Mandatory configmap {{ $setupJsonName }} does not exist. You must create it before the setup can start.
    Use the corresponding fields in the values.yaml and upgrade the chart.
    Ignore this warning if you created it manually with:
        kubectl --namespace={{ .Release.Namespace }} create configmap {{- $setupJsonName }} --from-file=./setup.json

Info: A example setup.json can be found in the values.yaml file of this chart.
{{ end }}
